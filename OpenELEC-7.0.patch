diff --git a/config/noobs/partitions.json b/config/noobs/partitions.json
index 95e0deb..bc05e26 100644
--- a/config/noobs/partitions.json
+++ b/config/noobs/partitions.json
@@ -3,7 +3,7 @@
     {
       "label":                     "@DISTRONAME@_@PROJECT@_System",
       "filesystem_type":           "FAT",
-      "partition_size_nominal":    512,
+      "partition_size_nominal":    @SYSTEM_SIZE@,
       "want_maximised":            false,
       "uncompressed_tarball_size": 120,
       "mkfs_options":              ""
diff --git a/config/path b/config/path
index 8d0ed40..e9a0f3a 100644
--- a/config/path
+++ b/config/path
@@ -63,6 +63,8 @@ SED="sed -i"
   PKG_URL=""
   PKG_GIT_URL=""
   PKG_GIT_BRANCH=""
+  PKG_SOURCE_NAME=""
+  PKG_SOURCE_DIR=""
   PKG_DEPENDS_TARGET=""
   PKG_DEPENDS_HOST=""
   PKG_DEPENDS_INIT=""
diff --git a/distributions/OpenELEC/options b/distributions/OpenELEC/options
index 01a0767..ac22937 100644
--- a/distributions/OpenELEC/options
+++ b/distributions/OpenELEC/options
@@ -210,3 +210,8 @@
 # set the addon dirs
   ADDON_PATH="$ADDON_VERSION/$PROJECT/$TARGET_ARCH"
   ADDON_URL="$ADDON_SERVER_URL/$ADDON_PATH"
+
+# Default size of system partition, in MB, eg. 512
+  SYSTEM_SIZE=512
+# Default system partition offset, in sectors, eg. 2048
+  SYSTEM_PART_START=2048
diff --git a/packages/sysutils/systemd/package.mk b/packages/sysutils/systemd/package.mk
index 8533931..6b4586b 100644
--- a/packages/sysutils/systemd/package.mk
+++ b/packages/sysutils/systemd/package.mk
@@ -28,6 +28,7 @@ PKG_PRIORITY="required"
 PKG_SECTION="system"
 PKG_SHORTDESC="systemd: a system and session manager"
 PKG_LONGDESC="systemd is a system and session manager for Linux, compatible with SysV and LSB init scripts. systemd provides aggressive parallelization capabilities, uses socket and D-Bus activation for starting services, offers on-demand starting of daemons, keeps track of processes using Linux cgroups, supports snapshotting and restoring of the system state, maintains mount and automount points and implements an elaborate transactional dependency-based service control logic. It can work as a drop-in replacement for sysvinit."
+PKG_SOURCE_NAME="$PKG_NAME-$PKG_VERSION.tar.gz"
 
 PKG_IS_ADDON="no"
 PKG_AUTORECONF="yes"
@@ -109,10 +110,6 @@ PKG_CONFIGURE_OPTS_TARGET="ac_cv_func_malloc_0_nonnull=yes \
                            --with-rootprefix=/usr \
                            --with-rootlibdir=/lib"
 
-unpack() {
-  tar xf $ROOT/$SOURCES/systemd/v$PKG_VERSION.tar.gz -C $ROOT/$BUILD
-}
-
 pre_build_target() {
 # broken autoreconf
   ( cd $PKG_BUILD
diff --git a/packages/tools/installer/config/installer.conf b/packages/tools/installer/config/installer.conf
index 5c88d15..2fa9df3 100644
--- a/packages/tools/installer/config/installer.conf
+++ b/packages/tools/installer/config/installer.conf
@@ -19,8 +19,11 @@
   DISKLABEL_SYSTEM="System"
   DISKLABEL_STORAGE="Storage"
 
-# Defaultsize of system partition (Cylinder: 16=132MB, 31=255MB, 66=517MiB)
-  PARTSIZE_SYSTEM="66"
+# Default size of system partition, in MB, eg. 512
+  PARTSIZE_SYSTEM="@SYSTEM_SIZE@"
+
+# Default starting offset for system partition, in sectors (1 sector = 512B), eg. 2048
+  PARTSIZE_SYSTEM_OFFSET="@SYSTEM_PART_START@"
 
 # additional parameters to extlinux
   EXTLINUX_PARAMETERS=""
diff --git a/packages/tools/installer/package.mk b/packages/tools/installer/package.mk
index 900dfa7..71d54cb 100644
--- a/packages/tools/installer/package.mk
+++ b/packages/tools/installer/package.mk
@@ -50,6 +50,9 @@ post_install() {
     else
       cp $PKG_DIR/config/installer.conf $INSTALL/etc
     fi
+    sed -e "s/@SYSTEM_SIZE@/$SYSTEM_SIZE/g" \
+        -e "s/@SYSTEM_PART_START@/$SYSTEM_PART_START/g" \
+        -i $INSTALL/etc/installer.conf
 
   enable_service installer.service
 }
diff --git a/packages/tools/installer/scripts/installer b/packages/tools/installer/scripts/installer
index 5bbccdd..ff67863 100755
--- a/packages/tools/installer/scripts/installer
+++ b/packages/tools/installer/scripts/installer
@@ -253,15 +253,20 @@ do_install_quick() {
         cat /usr/share/syslinux/mbr.bin > $INSTALL_DEVICE
       fi
 
+      partsize_system_start=$PARTSIZE_SYSTEM_OFFSET
+      partsize_system_end=$(((PARTSIZE_SYSTEM * 1024 * 1024 / 512) + partsize_system_start))
+      partsize_storage_start=$((partsize_system_end + 2048))
+      partsize_storage_end=-1024
+
       msg_progress_install "10" "creating partition on $INSTALL_DEVICE"
       if [ "$UEFI" = "1" ]; then
-        parted -s $INSTALL_DEVICE unit cyl mkpart primary fat32 -- 0 $PARTSIZE_SYSTEM >> $LOGFILE 2>&1
+        parted -s $INSTALL_DEVICE unit s mkpart primary fat32 -- $partsize_system_start $partsize_system_end >> $LOGFILE 2>&1
       else
-        parted -s $INSTALL_DEVICE unit cyl mkpart primary ext2 -- 0 $PARTSIZE_SYSTEM >> $LOGFILE 2>&1
+        parted -s $INSTALL_DEVICE unit s mkpart primary ext2  -- $partsize_system_start $partsize_system_end >> $LOGFILE 2>&1
       fi
 
       msg_progress_install "13" "creating partition on $INSTALL_DEVICE"
-      parted -s $INSTALL_DEVICE unit cyl mkpart primary ext2 -- $PARTSIZE_SYSTEM -2 >> $LOGFILE 2>&1
+      parted -s $INSTALL_DEVICE unit s mkpart primary ext2 -- $partsize_storage_start $partsize_storage_end >> $LOGFILE 2>&1
 
       msg_progress_install "16" "setup bootflag on partition 1 of $INSTALL_DEVICE"
       parted -s $INSTALL_DEVICE set 1 boot on >> $LOGFILE 2>&1
diff --git a/scripts/extract b/scripts/extract
index 110beb6..64ce7b8 100755
--- a/scripts/extract
+++ b/scripts/extract
@@ -25,10 +25,12 @@ if [ -z "$3" ]; then
   exit 1
 fi
 
-[ -z "$PKG_URL" -a -z "$PKG_GIT_URL" ] && exit 1
+[ -z "$PKG_URL" -a -z "$PKG_GIT_URL" -a -z "$PKG_SOURCE_NAME" ] && exit 1
 [ ! -d "$SOURCES/$1" -o ! -d "$3" ] && exit 1
 
-if [ -n "$PKG_URL" ]; then
+if [ -n "$PKG_SOURCE_NAME" ]; then
+  FILE="$PKG_SOURCE_NAME"
+elif [ -n "$PKG_URL" ]; then
   for i in $PKG_URL; do
     FILE="$FILE `basename $i`"
   done
diff --git a/scripts/get b/scripts/get
index 32701b2..386235a 100755
--- a/scripts/get
+++ b/scripts/get
@@ -27,7 +27,7 @@ if [ -z "$1" ]; then
   done
 fi
 
-if [ -n "$PKG_URL" -o -n "$PKG_GIT_URL" ]; then
+if [ -n "$PKG_URL" -o -n "$PKG_GIT_URL" -o -n "$PKG_SOURCE_NAME" ]; then
   mkdir -p $SOURCES/$1
 
   # Avoid concurrent downloads of the same package
@@ -38,7 +38,46 @@ if [ -n "$PKG_URL" -o -n "$PKG_GIT_URL" ]; then
     sleep 1
   done
 
-  if [ -n "$PKG_URL" ]; then
+  if [ -n "$PKG_SOURCE_NAME" ]; then
+
+    PACKAGE="$SOURCES/$1/$PKG_SOURCE_NAME"
+    PACKAGE_MIRROR="$DISTRO_MIRROR/$PKG_NAME/$PKG_SOURCE_NAME"
+    [ "$VERBOSE" != "yes" ] && WGET_OPT=-q
+    WGET_CMD="wget --timeout=30 --passive-ftp --no-check-certificate -c $WGET_OPT -O $SOURCES/$1/$PKG_SOURCE_NAME"
+
+    NBWGET="1"
+
+    STAMP="$PACKAGE.url"
+    MD5SUM="$PACKAGE.md5"
+
+    DL="yes"
+    if [ -f "$STAMP" ]; then
+      [ "`cat $STAMP`" == "$PKG_URL" ] && DL="no"
+    fi
+
+    if [ "$DL" == "yes" ]; then
+      rm -f $STAMP
+
+      printf "%${BUILD_INDENT}c ${boldcyan}GET${endcolor}      $1\n" ' '>&$SILENT_OUT
+      export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))
+
+      until [ -f "$STAMP" ] || $WGET_CMD $PKG_URL || $WGET_CMD $PACKAGE_MIRROR; do
+        NBWGET=$(($NBWGET+1))
+        if [ "$NBWGET" -gt "10" ]; then
+          echo -e "\nCant't get $1 sources : $PKG_URL\n Try later !!"
+          exit 1
+        fi
+      done
+
+      echo $PKG_URL > $STAMP
+      md5sum -t $PACKAGE > $MD5SUM
+
+      rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/unpack
+      rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/build
+    fi
+
+  elif [ -n "$PKG_URL" ]; then
+
     for i in $PKG_URL; do
       SOURCE_NAME="`basename $i`"
       PACKAGE="$SOURCES/$1/$SOURCE_NAME"
@@ -139,3 +178,5 @@ if [ -n "$PKG_URL" -o -n "$PKG_GIT_URL" ]; then
 
   fi
 fi
+
+exit 0
diff --git a/scripts/image b/scripts/image
index 8c321b2..e6ff5f5 100755
--- a/scripts/image
+++ b/scripts/image
@@ -356,6 +356,8 @@ fi
           UUID_STORAGE="$(uuidgen)" \
           UBOOT_SYSTEM="$UBOOT_SYSTEM" \
           EXTRA_CMDLINE="$EXTRA_CMDLINE" \
+          SYSTEM_SIZE="$SYSTEM_SIZE" \
+          SYSTEM_PART_START="$SYSTEM_PART_START" \
           $SCRIPTS/mkimage
       fi
 
@@ -452,6 +454,7 @@ fi
 
       sed -e "s%@DISTRONAME@%$DISTRONAME%g" \
           -e "s%@PROJECT@%$PROJECT%g" \
+          -e "s%@SYSTEM_SIZE@%$SYSTEM_SIZE%g" \
           -i $RELEASE_DIR/${DISTRONAME}_${PROJECT}/partitions.json
 
     # create System dir
diff --git a/scripts/mkimage b/scripts/mkimage
index 8ac0fea..53c62f5 100755
--- a/scripts/mkimage
+++ b/scripts/mkimage
@@ -27,7 +27,11 @@
   OE_TMP=$(mktemp -d)
   SAVE_ERROR="$OE_TMP/save_error"
 
-  SYSTEM_SIZE=512
+  if [ -z "$SYSTEM_SIZE" -o -z "$SYSTEM_PART_START" ]; then
+    echo "mkimage: SYSTEM_SIZE and SYSTEM_PART_START must be configured!"
+    exit 1
+  fi
+
   STORAGE_SIZE=32 # STORAGE_SIZE must be >= 32 !
 
   DISK_SIZE=$(( $SYSTEM_SIZE + $STORAGE_SIZE + 4 ))
@@ -74,8 +78,8 @@ trap cleanup SIGINT
 
 # create part1
   echo "image: creating part1..."
-  SYSTEM_PART_END=$(( $SYSTEM_SIZE * 1024 * 1024 / 512 + 2048 ))
-  parted -s "$DISK" -a min unit s mkpart primary fat32 2048 $SYSTEM_PART_END
+  SYSTEM_PART_END=$(( ($SYSTEM_SIZE * 1024 * 1024 / 512) + $SYSTEM_PART_START ))
+  parted -s "$DISK" -a min unit s mkpart primary fat32 $SYSTEM_PART_START $SYSTEM_PART_END
   if [ "$BOOTLOADER" = "syslinux" ]; then
     parted -s "$DISK" set 1 legacy_boot on
   else
@@ -100,7 +104,7 @@ fi
 
 # create filesystem on part1
   echo "image: creating filesystem on part1..."
-  OFFSET=$(( 2048 * 512 ))
+  OFFSET=$(( $SYSTEM_PART_START * 512 ))
   HEADS=4
   TRACKS=32
   SECTORS=$(( $SYSTEM_SIZE * 1024 * 1024 / 512 / $HEADS / $TRACKS ))
diff --git a/scripts/unpack b/scripts/unpack
index 572f7d0..b42fe22 100755
--- a/scripts/unpack
+++ b/scripts/unpack
@@ -73,7 +73,9 @@ fi
 if [ "$(type -t unpack)" = "function" ]; then
   unpack
 else
-  if [ -n "$PKG_URL" ]; then
+  if [ -n "$PKG_SOURCE_NAME" ]; then
+    $SCRIPTS/extract $1 $PKG_SOURCE_NAME $BUILD
+  elif [ -n "$PKG_URL" ]; then
     $SCRIPTS/extract $1 "$1*.tar.bz2" $BUILD
     $SCRIPTS/extract $1 "$1*.tbz"     $BUILD
     $SCRIPTS/extract $1 "$1*.tar.gz"  $BUILD
@@ -87,8 +89,12 @@ else
   fi
 fi
 
-if [ -n "$PKG_SOURCE_DIR" ]; then
-  mv $BUILD/$PKG_SOURCE_DIR $BUILD/$PKG_NAME-$PKG_VERSION
+if [ ! -d $BUILD/$PKG_NAME-$PKG_VERSION ]; then
+  if [ -n "$PKG_SOURCE_DIR" ]; then
+    mv $BUILD/$PKG_SOURCE_DIR $BUILD/$PKG_NAME-$PKG_VERSION
+  elif [ -d $BUILD/$PKG_NAME-$PKG_VERSION* ]; then
+    mv $BUILD/$PKG_NAME-$PKG_VERSION* $BUILD/$PKG_NAME-$PKG_VERSION
+  fi
 fi
 
 if [ -d "$PKG_DIR/sources" ]; then
